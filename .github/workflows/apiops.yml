name: ApiOpsDeploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'environment to deploy to'
        required: true
        type: environment

permissions:
  id-token: write
  contents: write

env:
  RUNNER_DEBUG: 1

jobs:
  # This workflow contains a single job called "build"
  deploy-apis:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      SP_APPID: ${{secrets.APPID}}
      SP_PASSWORD: ${{secrets.PASSWORD}}
      SP_TENANT: ${{secrets.TENANT}}

    steps:
      - uses: actions/checkout@v4

      - name: Set PSCredential Object
        run: |
          Write-Host "input: ${{inputs.environment}}"
          Write-Host "environment: ${{vars.env}}"
          Write-Host "appid: ${{env.SP_APPID}}"
          Write-Host "pass: ${{env.SP_PASSWORD}}"
          Write-Host "tenant: ${{env.SP_TENANT}}"

          Install-Module -Name Az.Accounts -Scope CurrentUser -Force

          Import-Module Az.Accounts

          # Create a PSCredential object with the service principal's app id (client id) and secret
          $securePassword = ConvertTo-SecureString -String '${{env.SP_PASSWORD}}' -AsPlainText -Force
          $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList '${{env.SP_APPID}}', $securePassword
          
          # Connect to Azure with the service principal
          Connect-AzAccount -ServicePrincipal -Credential $credential -Tenant '${{env.SP_TENANT}}'

          # Get the access token
          $context = Get-AzContext
          $profile = [Microsoft.Azure.Commands.Common.Authentication.Abstractions.AzureRmProfileProvider]::Instance.Profile
          $profileClient = New-Object -TypeName Microsoft.Azure.Commands.ResourceManager.Common.RMProfileClient -ArgumentList ($profile)
          $token = $profileClient.AcquireAccessToken($context.Subscription.TenantId)
          $accessToken = $token.AccessToken
          
        shell: pwsh
